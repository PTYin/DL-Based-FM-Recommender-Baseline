dataset:
  decoder: 'libfm'
  num_workers: 4
  batch_size: 2  # batch size for training
  paths:
    train: 'data/MovieLens/ml-tag/ml-tag.train.libfm'
    valid: 'data/MovieLens/ml-tag/ml-tag.validation.libfm'
    test: 'data/MovieLens/ml-tag/ml-tag.test.libfm'

model:
  name: 'DeepFM'
  loss_type: 'log_loss'  # ['square_loss', 'log_loss']
  optimizer: 'Adagrad'  # ['Adagrad', 'Adam', 'SGD', 'Momentum']
  learning_rate: 0.05
  epochs: 100
  steps_per_checkpoint: 100
  batch_norm: True  # use batch_norm or not
  save: True  # save model or not
  model_path: 'saved/DeepFM/'
  gpu: '0'  # gpu ID
  evaluation: True
  task: 'rating'
  load: True
  load_path: 'saved/DeepFM/DeepFM.pth'

task: 'rating'  # ['rating', 'ranking']